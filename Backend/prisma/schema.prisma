generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum Category {
  GAMES
  ANIME
  TV_SHOW
  MOVIES
  BOOKS
}

model AppUser {
  id          String   @id @default(uuid()) // Your app's user ID
  supabaseId  String   @unique // Links to auth.users.id
  displayName String
  bio         String?
  level       Int      @default(1)
  createdAt   DateTime @default(now())

  // Relations
  trivia    Trivia[]
  playlists Playlist[]
}

model Playlist {
  id                  Int              @id @default(autoincrement())
  name                String
  favourites          Int @default(0)
  trivia              PlaylistTrivia[]
  imageUrl            String?
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  user                AppUser          @relation(fields: [userId], references: [id])
  userId              String
}

model Trivia {
  id                  Int     @id @default(autoincrement())
  userId              String
  user                AppUser @relation(fields: [userId], references: [id])

  category            Category
  title               String
  incorrectStatement  String
  highlightStart      Int
  highlightEnd        Int
  correction          String
  tags                String[]
  comment             String?
  hint                String?
  likes               Int @default(0)
  dislikes            Int @default(0)
  correctCount        Int @default(0)
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  PlaylistTrivia      PlaylistTrivia[]
}

model PlaylistTrivia {
  playlist   Playlist @relation(fields: [playlistId], references: [id])
  playlistId Int

  trivia   Trivia @relation(fields: [triviaId], references: [id])
  triviaId Int

  @@id([playlistId, triviaId]) // Composite primary key
}

model DiscoverCategory {
  id     Int     @id @default(autoincrement())
  name String @unique
  imageUrl String? // path or full URL to Supabase storage
}
